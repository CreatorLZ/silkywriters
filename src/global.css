/* global.css */
@import "tailwindcss";

::-webkit-scrollbar {
  width: 0;
  background: transparent;
}
* {
  scrollbar-width: none;
}
html {
  scroll-behavior: auto !important;
}
* {
  scroll-behavior: auto !important;
}
@font-face {
  font-family: "Monigue";
  src: url("../src/assets/fonts/monigue.woff2") format("woff2"),
    url("../src/assets/fonts/monigue.woff") format("woff");
  font-display: swap;
  font-weight: normal;
  font-style: normal;
}
body {
  font-family: "Monigue", "Space Grotesk", system-ui, -apple-system,
    BlinkMacSystemFont, sans-serif;
}
.normal-text {
  font-family: "Space Grotesk", sans-serif;
}
.hero-section {
  font-family: "Monigue", sans-serif; /* Monigue for hero section */
}
body {
  /* background-color: #111827; */
  /* font-family: "Inter", sans-serif; */
  background-color: rgb(27, 27, 27);
  overflow-x: hidden;
  max-width: 100vw;
  margin: 0;
  padding: 0;
}

/* Original outline-text for other parts of the project */
.outline-text {
  -webkit-text-stroke: 1px white;
  color: transparent;
  transition: color 0.3s ease;
}

.outline-text:hover {
  color: white;
}

/* Outline text for project titles - This is the "full" solid white text that appears when not over the image */
.outline-text3 {
  -webkit-text-stroke: 2px white;
  color: white; /* Default white fill */
  position: relative;
  z-index: 5; /* This will be the lowest text layer for the title, seen when nothing is on top */
}
.outline-text4 {
  -webkit-text-stroke: 1px white;
  color: transparent; /* Default white fill */
  position: relative;
  z-index: 5; /* This will be the lowest text layer for the title, seen when nothing is on top */
}

/* Container for the *clipped* transparent text layer */
.inverted-text-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%; /* Will match the project div width */
  height: 100%; /* Will match the project div height */
  overflow: hidden; /* **Crucial for clipping the transparent h2 to the image bounds** */
  pointer-events: none; /* Allows clicks to pass through to the image if needed */
  z-index: 10; /* This container sits *above* the main project image */
}

/* The h2 inside the overlay - this is the one that becomes transparent/image-filled */
.inverted-text-overlay > h2 {
  -webkit-text-stroke: 2px white; /* Keep the white stroke */
  color: transparent; /* Makes the fill transparent */
  background-clip: text; /* Clips the background to the text shape */
  -webkit-background-clip: text; /* For WebKit browsers */
  background-image: var(--project-image); /* Image will be passed from JS */
  background-size: var(--project-bg-size); /* Size will be passed from JS */
  background-position: var(
    --project-bg-position
  ); /* Position will be passed from JS */
  background-repeat: no-repeat;
  position: absolute; /* Needed for positioning relative to its parent .inverted-text-overlay */
  /* No clip-path directly on h2, its parent's overflow: hidden handles the clip */
  z-index: 1; /* Relative z-index within the overlay, but its parent .inverted-text-overlay has z-index 10 */
}

/* Ensure hover effect applies correctly */
/* .outline-text3:hover {
  color: transparent;
} */

/* Container for the circular text, handles positioning and movement */
@layer components {
  .circular-text-container {
    position: relative;
    /* Ensure the container doesn't get clipped on mobile */
    z-index: 20;
  }
}

@layer components {
  .circular-text-container > div:first-child {
    position: absolute;
    inset: 0;
    border-radius: 9999px;
    border: 2px solid red;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.5s ease-in-out;
    overflow: visible !important; /* Allow content to overflow */
    /* Ensure button is always visible */
    z-index: 21;
  }
}

@layer components {
  .circular-bg-expand {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 9999px;
    background-color: red;
    transition: transform 0.3s ease-in-out !important;
    z-index: 0;
  }
}

@layer components {
  .circular-text-container span {
    font-size: 12px;
    letter-spacing: 0.15em;
    white-space: nowrap;
    transform: scale(1.1); /* Slightly larger to break out of circle */
    color: white !important;
    transition: color 0.5s ease-in-out, transform 0.3s ease;
    /* Ensure text is visible on mobile */
    @media (max-width: 1024px) {
      font-size: 10px;
      letter-spacing: 0.1em;
    }
  }
}

@layer components {
  .outline-text2 {
    -webkit-text-stroke: 2px rgb(209 213 219);
    color: transparent;
    transition: color 0.3s ease;
    transform: translate3d(0vw, 0vh, 0px) scale3d(1, 1, 1) rotateX(0deg)
      rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg);
    opacity: 0.1;
    transform-style: preserve-3d;
  }
}

@layer components {
  .extended-text {
    letter-spacing: 0.5em;
    transform: scale(1);
    color: white !important;
    transition: color 0.5s ease-in-out, transform 0.5s ease-in-out;
    width: 200%;
    display: inline-block;
    text-align: center;
  }
}

@layer components {
  .circular-text-container,
  .circular-text-container > div,
  .circular-text-container > div > div {
    overflow: visible !important;
    /* Ensure all nested elements maintain visibility */
    position: relative;
    z-index: inherit;
  }
}

/* Mobile-specific fixes for the CTA button */
@media (max-width: 1024px) {
  .circular-text-container {
    /* Ensure the button container is properly positioned on mobile */
    position: relative !important;
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
  }

  .circular-text-container > div:first-child {
    /* Make sure the button itself is visible */
    position: absolute !important;
    display: flex !important;
    visibility: visible !important;
    opacity: 1 !important;
  }
}

/*
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
*/
